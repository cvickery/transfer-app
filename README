2017-04-28
Trying to give meaningful error messages when people don't sign in successfully for one reason or
another. This is going to take a lot of testing to get "right." One mystery case: if I disallow
third party cookies, I get an appropriate message saying they aren't allowed from Google. If I enable
them I used to get a message saying I was signed into my gmail account, but now Google hangs in that
situation. Going to bed.

2017-04-24

I think I have authentication under control. Main stumbling block was attempting to call
auth.isSignedIn.listen() when user is not signed in. Rather, use auth.signIn(...).then() to set up
the function that responds to successful signins. Once signed in, you can call .listen() to find out
if the user signs out, but that's probably not needed for my apps.

The reason for pursuing this was so that meaningful prompts could be delivered to the user: the
prompt (choose account) dialog won't display unless the user allows third-party cookies from Google;
need to alert people to sign in using their short-form QC email address (the latter not implemented
yet).

Next step: clean this up  bit. Then see if you can access a Postgres database to get info about the
user's and the assessment repository metadata.

2017-04-21
First successful deploy with css and js. Initialized git repository.
Used http://realfavicongenerator.net/ to generate Q logo favicon based on one on MyQC. (It doesn't
show up on appspot.com, but its presence suppresses a Javascript error message.)
Next step: try to get user's QC google login id.

2017-04-20
https://cloud.google.com/appengine/docs/flexible/python/runtime gives info on configuring gunicorn
through a configuration file (gunicorn.conf.py). This can be useful if you need access to the
client's IP address or to know whether the request was made through https or not. (HTTPS requests
become http requests when they go through gunicorn.)

Trying to figure out what url rules get specified in app.yaml and what ones in main.py using flask.

2017-04-19
Pure static pages don't work. Need to work with Flask, which can do both static (templated if you
want them so) and app code, which I will need for authentication anyway.
Flask is based on the WSGI interface. Gunicorn is the server on app engine; Werkzeug is the server
when testing locally(?)

2017-04-15
Trying to get back to this...
Starting with pure static pages ...

2017-03-04
I copied the files from ../python-docs-samples/appengine/flexible/hello_world/ but haven't set up
the virtual environment yet.

Do I need the main_test.py file?
Can I get this thing to deploy and do authentication?
I want to set up static pages for index.html, prototype.js, and prototype.css
